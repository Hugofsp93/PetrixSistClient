@model PetrixSisClient.Models.Anuncio

@{
    ViewBag.Title = "Editar";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Anuncio</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.email_anun, "E-mail", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.email_anun, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.email_anun, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.conteudo_anun, "Descricao", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.conteudo_anun, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.conteudo_anun, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.telefone_anun, "Telefone", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.telefone_anun, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.telefone_anun, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.titulo_anun, "Titulo do anuncio", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.titulo_anun, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.titulo_anun, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.data_anun, "Data do anuncio", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.data_anun, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.data_anun, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fk_Usuario_id_user, "Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fk_Usuario_id_user, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fk_Usuario_id_user, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fk_Animal_id_animal, "Animal", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fk_Animal_id_animal, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fk_Animal_id_animal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.fk_Localidade_id_local, "Localidade", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fk_Localidade_id_local, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fk_Localidade_id_local, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
